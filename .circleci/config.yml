# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Deploy to production"
          command: |
            echo "que onda!!!!!!"
            sudo apt-get update
            sudo apt-get -qq install git-ftp
            echo "Deploying project ..."
            git ftp init push --user "${FTP_USER}" --passwd "${FTP_PASS}" ${FTP_URL} -vv -b master

  git-blame:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Get Latest Commit Hash"
          command: |
            LATEST_COMMIT_HASH=$(git rev-parse HEAD)
            echo $LATEST_COMMIT_HASH
            echo $LATEST_COMMIT_HASH > latest_commit_hash.txt
      - run:
          name: "Git Blame and Save Output"
          command: |
            BLAME=$(git log -n 1)
            echo $BLAME
            echo $BLAME > git_blame_output.txt
            git log -n 1 --pretty=format:'%H' > git_blame.txt
      - run:
          name: "Send Email via curl Command"
          command: |
            LATEST_COMMIT_HASH=$(cat latest_commit_hash.txt)
            BLAME=$(cat git_blame.txt)
            cat latest_commit_hash.txt
            curl "https://angry-meninsky.108-175-14-140.plesk.page/index.php/user/list?mensaje=$BLAME&tipo=$LATEST_COMMIT_HASH&extra=$(cat%20git_blame_output.txt)"
            
#curl "https://angry-meninsky.108-175-14-140.plesk.page/index.php/user/list?mensaje=$BLAME&tipo=$LATEST_COMMIT_HASH&extra=$BLAME"
#echo -e "Subject: Git Blame Information\n\n$(cat email_content.txt)" | mail -s "Git Blame Information" ${EMAIL_ADDRESS}
#git show $LATEST_COMMIT_HASH > git_blame_output.txt
#cat git_blame_output.txt > email_content.txt
#git show $LATEST_COMMIT_HASH > git_blame_output.txt
#git show $LATEST_COMMIT_HASH
#LATEST_COMMIT_HASH=$(cat latest_commit_hash.txt)

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - git-blame:
          requires:
            - say-hello